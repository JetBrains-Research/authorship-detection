/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.nercis.isscp.idl;

/**
 * 定义策略状态类型
 * Instaticcheck	静态检测
 * Instaticchecktimeout	静态检测超时
 * Instaticcheckfailure	静态检测失败
 * Instaticcheckbreak	静态检测中断
 * Indycheck	动态检测
 * Indychecktimeout	动态检测超时
 * Indycheckfailure	动态检测失败
 * Indycheckbreak	动态检测中断
 * Invicheck	病毒检测
 * Invichecktimeout	病毒检测超时
 * Invicheckfailure	病毒检测失败
 * Invicheckbreak	病毒检测中断
 */
public enum CheckPlotsStatus implements org.apache.thrift.TEnum {
  Instaticcheck(0),
  Instaticchecktimeout(1),
  Instaticcheckfailure(2),
  Instaticcheckbreak(3),
  Indycheck(4),
  Indychecktimeout(5),
  Indycheckfailure(6),
  Indycheckbreak(7),
  Invicheck(8),
  Invichecktimeout(9),
  Invicheckfailure(10),
  Invicheckbreak(11);

  private final int value;

  private CheckPlotsStatus(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  @Override
public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static CheckPlotsStatus findByValue(int value) { 
    switch (value) {
      case 0:
        return Instaticcheck;
      case 1:
        return Instaticchecktimeout;
      case 2:
        return Instaticcheckfailure;
      case 3:
        return Instaticcheckbreak;
      case 4:
        return Indycheck;
      case 5:
        return Indychecktimeout;
      case 6:
        return Indycheckfailure;
      case 7:
        return Indycheckbreak;
      case 8:
        return Invicheck;
      case 9:
        return Invichecktimeout;
      case 10:
        return Invicheckfailure;
      case 11:
        return Invicheckbreak;
      default:
        return null;
    }
  }
}
