//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.weparty.views;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.weparty.R.id;
import com.weparty.R.layout;
import com.weparty.widgets.KeywordsFlow;

public final class EditActivity_
    extends EditActivity
{


    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.act_edit_content);
    }

    private void init_(Bundle savedInstanceState) {
        injectExtras_();
    }

    private void afterSetContentView_() {
        keywordsFlow = ((KeywordsFlow) findViewById(id.keywordsflow));
        title_sub_bar = ((RelativeLayout) findViewById(id.title_sub_bar));
        details_dt = ((EditText) findViewById(id.details_dt));
        title = ((TextView) findViewById(id.title_center));
        {
            View view = findViewById(id.title_back);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        EditActivity_.this.back();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.title_pos);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        EditActivity_.this.pos();
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) findViewById(id.details_dt));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void afterTextChanged(Editable s) {
                        EditActivity_.this.detailsChange(s);
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                }
                );
            }
        }
        afterViews();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static EditActivity_.IntentBuilder_ intent(Context context) {
        return new EditActivity_.IntentBuilder_(context);
    }

    private void injectExtras_() {
        Intent intent_ = getIntent();
        Bundle extras_ = intent_.getExtras();
        if (extras_!= null) {
            if (extras_.containsKey("flag")) {
                try {
                    flag = ((Integer) extras_.get("flag"));
                } catch (ClassCastException e) {
                    Log.e("EditActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
            if (extras_.containsKey("value")) {
                try {
                    value = cast_(extras_.get("value"));
                } catch (ClassCastException e) {
                    Log.e("EditActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @SuppressWarnings("unchecked")
    private<T >T cast_(Object object) {
        return ((T) object);
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, EditActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public EditActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

        public EditActivity_.IntentBuilder_ flag(int flag) {
            intent_.putExtra("flag", flag);
            return this;
        }

        public EditActivity_.IntentBuilder_ value(String value) {
            intent_.putExtra("value", value);
            return this;
        }

    }

}
